<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        5AAAAABJRU5ErkJggg==
</value>
  </data>
</root>